---
# defaults file for ansible-role-slurm

# add all the slurm hosts to /etc/hosts in every machine
# ips come from ansible facts hostvars[ansible_hostname]['ansible_default_ipv4']['address']
slurm_update_etc_hosts_file: true

# point this var to a git repo if you have your slurm config in git
# slurm_config_git_repo: ""

# if you build your own deb packages from the official slurm tarbal you need to create a local acocunt for slurm
# if you use the slurm package from official ubuntu repos you can set this to false because the slurm user is
# created by the package installation
slurm_create_local_account_and_group: true

# by default the role will deploy a lua submit plugin which will automatically add the users to the slurm accounting db
# Check "templates/job_submit.lua.j2" for details
slurm_config_deploy_lua_submit_plugin: true

# Use slurm configless https://slurm.schedmd.com/configless_slurm.html
# This feature requires slurm 20.02 or higher
# Only tested on RedHat systems but it should work on Ubuntu too if you install ubuntu20.02 or higher
slurm_configless: false

slurm_mariadb_custom_config: |
  [mysqld]
  innodb_buffer_pool_size=4096M
  innodb_log_file_size=64M
  innodb_lock_wait_timeout=900
  max_allowed_packet=16M

# Deploy required scripts in slurm master for cloud scheduling using openstack (https://slurm.schedmd.com/elastic_computing.html)
# This will deploy "ResumeProgram", "SuspendProgram" for slurm.conf
# and /etc/openstack/clouds.yaml with an application credential in the slurm master
# This requires a custom slurm.conf. Check "templates/slurm.conf.j2.cloud.example" for an example
slurm_openstack_cloud_scheduling: false
slurm_openstack_venv_path: /opt/venv_slurm
slurm_openstack_auth_url: https://my-openstack-cloud.com:5000/v3
slurm_openstack_application_credential_id: "4eeabeabcabdwe19451e1d892d1f7"
slurm_openstack_application_credential_secret: "supersecret1234"
slurm_openstack_region_name: "RegionOne"
slurm_openstack_interface: "public"
slurm_openstack_identity_api_version: 3
slurm_openstack_auth_type: "v3applicationcredential"
# slurm_openstack_ssh_keypair_name: mykeypair_name
# slurm_openstack_ssh_public_key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIElrlCStX712QnL2zKy+TpmlxoEtRfm2KUOnPpkMv6ON"

# slurm cluster name as defined in slurm.cfg
slurm_cluster_name: slurm-cluster

# set this var to the ansible_hostname of the slurm-master
slurm_master_host: slurm-master.cluster.com
# set this var to the ansible_hostname of the slurm-dbd host (same as slurm-master by default)
slurm_dbd_host: "{{ slurm_master_host }}"

# group in your ansible inventory including all the slurm workers
slurm_workers_group: slurm_workers

# group in your ansible inventory including all the submit hosts
slurm_submit_group: slurm_submit_hosts

# this is the setting "StateSaveLocation" in slurm.conf
slurm_slurmctld_spool_path: /var/spool/slurmctld

# this is the setting "SlurmdSpoolDir" in slurm.conf
slurm_slurmd_spool_path: /var/spool/slurmd

# settings for the slurm accounting daemon
slurm_slurmdbd_mysql_db_name: slurm
slurm_slurmdbd_mysql_user: slurm
slurm_slurmdbd_mysql_password: aadAD432saAdfaoiu

# slurm user and group which runs the slurm daemons
slurm_user: "slurm"
slurm_group: "slurm"

# slurm packages we install in every cluster member
slurm_packages_common:
  - slurm-client
  - libpmix2

# slurm packages we install only in master node
slurm_packages_master:
  - slurmctld

# slurm packages we install only in slurmdbd node
slurm_packages_slurmdbd:
  - slurmdbd
  - mariadb-server

# slurm packages we install only in worker nodes
slurm_packages_worker:
  - slurmd

# Set to true when using slurm cloud scheduling without neutron internal dns
# check templates/slurm.conf.j2.cloud.example for details on what this var is doing
slurm_openstack_cloud_reg_addrs: false

slurm_slurmd_systemd_override: |
  [Unit]
  #After=munge.service network-online.target remote-fs.target sssd.service
  ConditionPathExists=
