---
# tasks file for ansible-role-slurm

- name: Add all the slurm hosts to /etc/hosts
  when:
    - slurm_update_etc_hosts_file | bool
    - not '"docker" in virtualization_tech_guest'  # We cannot modify /etc/hosts in container
  block:

    - name: Add slurm master to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm master host"
        marker_end: "END slurm master host"
        block: |
          {{ hostvars[slurm_master_host]['ansible_default_ipv4']['address'] }}  {{ slurm_master_host }}

    - name: Add slurmdbd to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm dbd host"
        marker_end: "END slurm dbd host"
        block: |
          {{ hostvars[slurm_dbd_host]['ansible_default_ipv4']['address'] }}  {{ slurm_dbd_host }}

    - name: Add all the worker nodes to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm workers hosts"
        marker_end: "END slurm workers hosts"
        block: |
          {% for node in groups[slurm_workers_group]  %}
          {{ hostvars[node]['ansible_default_ipv4']['address'] }}  {{ node }}
          {% endfor %}

    - name: Add all the submit nodes to /etc/hosts
      ansible.builtin.blockinfile:
        dest: /etc/hosts
        marker_begin: "BEGIN slurm submit hosts"
        marker_end: "END slurm submit hosts"
        block: |
          {% for node in groups[slurm_submit_group]  %}
          {{ hostvars[node]['ansible_default_ipv4']['address'] }}  {{ node }}
          {% endfor %}

- name: Create local slurm user and logs folder
  when: slurm_create_local_account_and_group
  block:

    # gid is aligned with the gid used by slurm packages in official apt repos
    - name: Add local user group slurm
      ansible.builtin.group:
        name: "{{ slurm_group }}"
        gid: 64030

    # uid is aligned with the uid used by slurm packages in official apt repos
    - name: Add local user account slurm
      ansible.builtin.user:
        name: "{{ slurm_user }}"
        uid: 64030
        group: "{{ slurm_group }}"

    - name: Create the slurm logs folder
      ansible.builtin.file:
        path: /var/log/slurm
        owner: "{{ slurm_user }}"
        group: "{{ slurm_group }}"
        mode: 0755
        state: directory


- name: Download slurm config from git if "slurm_config_git_repo" is defined
  when: slurm_config_git_repo is defined
  block:

    - name: Install git
      ansible.builtin.apt:
        name: git
        state: present
        cache_valid_time: 600

    - name: Deploy slurm config file from a git repo
      ansible.builtin.git:
        repo: "{{ slurm_config_git_repo }}"
        dest: /etc/slurm/
        version: master
        force: true
      notify: Restart slurm services
      environment:
        GIT_SSL_NO_VERIFY: "True"

- name: Install common Slurm packages
  ansible.builtin.apt:
    name: "{{ slurm_packages_common }}"
    state: present
    cache_valid_time: 600
  tags: munge

- name: Generate a Munge key for the cluster in the slurm-master host
  ansible.builtin.command: "dd if=/dev/urandom of=/etc/munge/munge.key bs=1 count=1024"
  args:
    creates: /etc/munge/munge.key
  delegate_to: "{{ slurm_master_host }}"
  notify: Restart munge service
  no_log: true
  tags: munge

- name: Set permissions for /etc/munge/munge.key in master
  ansible.builtin.file:
    path: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: 0400
  delegate_to: "{{ slurm_master_host }}"
  tags: munge

- name: Retrieve Munge key from slurm-master host
  ansible.builtin.slurp:
    src: "/etc/munge/munge.key"
  register: _slurm_munge_key
  delegate_to: "{{ slurm_master_host }}"
  no_log: true
  tags: munge

- name: Write Munge key to every host in the cluster
  ansible.builtin.copy:
    content: "{{ _slurm_munge_key.content | b64decode }}"
    dest: "/etc/munge/munge.key"
    owner: munge
    group: munge
    mode: 0400
  when: ("slurm_dbd_host in inventory_hostname") or
        ("slurm_workers_group in group_names") or
        ("slurm_submit_group in group_names")
  notify: Restart munge service
  no_log: true
  tags: munge

- name: Start and enable munge service
  ansible.builtin.service:
    name: munge
    state: started
    enabled: true
  tags: munge

- name: Configure slurm accounting daemon
  ansible.builtin.include_tasks: slurm-accounting.yml
  when: "slurm_dbd_host in inventory_hostname"

- name: Configure slurm master daemon
  ansible.builtin.include_tasks: slurm-master.yml
  when: "slurm_master_host in inventory_hostname"

- name: Configure slurm workers
  ansible.builtin.include_tasks: slurm-worker.yml
  when: "slurm_workers_group in group_names"

- name: Configure slurm submit hosts
  ansible.builtin.include_tasks: slurm-submit.yml
  when:
    - "slurm_submit_group in group_names"
    - "not slurm_workers_group in group_names"
